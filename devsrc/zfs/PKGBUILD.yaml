# PKGBUILD.yaml for Arch ZFS
# Maintainer: Jesus Alvarez <jeezusjr@gmail.com>
# Created: Mon Dec 10 12:31:30 PST 2012
# Modified: Tue Dec 11 17:33:19 PST 2012
#
# This file is meant to be used with pbldr.
#

# upstream_version is the version of the software we are building. This string
# will be used when referring to the build directory in the PKGBUILDs. This
# number is usually the upstream version number contained within the name of
# the downloaded sources.
upstream_version: 0.6.0-rc12

# package_rel will be used as pkgrel in the PKGBUILD.
package_rel: 6

# Specify extra dependencies here
kernel_ver: 3.6.9

# URLs to upstream source code
spl: http://github.com/downloads/zfsonlinux/spl/spl-{}.tar.gz
zfs: http://github.com/downloads/zfsonlinux/zfs/zfs-{}.tar.gz

aur_packages:
    spl-utils: spl
    spl: spl
    zfs-utils: zfs
    zfs: zfs

split_packages:
    spl-split: spl
    zfs-split: zfs

package_groups:
    # The aur package group contains the zfs packages split up into four
    # separate packages. This is done because AUR does not support split
    # packages. When building from AUR, the process takes twice as long as
    # split packages because each module is built twice.
    aur:
        packages: aur_packages
        # The following action attributes are used when runing the pbldr tool
        # without specifying packages to use.
        sources: True  # Include building sources for this group
        build: False  # This group should not be compiled and built
        repo: False  # Do not create a repository with this group
    # The split group allows zfs and zfs-utils to be built at the same time,
    # reducing the amount of time to compile and build the packages by half as
    # compared to the AUR packages. This package group is what is used to
    # create the archzfs repository.
    split:
        packages: split_packages
        sources: True  # The split sources will contain the "split" in the file
                       # name.
        build: True
        repo: True

# Additional package dependencies
spl_depends: "linux={kernel_ver}"
spl_makedepends: "linux-headers={kernel_ver}"
zfs_depends: spl_depends
zfs_makedepends: spl_makedepends

# The last few constants are the sections of a PKGBUILD. By default, these
# constants, when combined together, take the shape of a split package.  Each
# package defined in GROUPS above must have an accompanying constant. Use
# underscores ('_') instead of hyphens ('-') when defining the package
# constants. Finally, these constants must also be defined as raw strings
# beginning with 'r'.

body: |
    # Maintainer: Jesus Alvarez <jeezusjr at gmail dot com>
    # Contributor: Kyle Fuller <inbox at kylefuller dot co dot uk>

    pkgname=($PKGNAMES)
    pkgver=$PACKAGE_VER
    pkgrel=$PACKAGE_REL
    arch=('x86_64')
    url='http://zfsonlinux.org/'
    source=($SOURCE_FILES)
    groups=('archzfs')
    md5sums=($MD5SUMS)
    spl-all:: license=('GPL')
    zfs-all:: license=('CDDL')
    spl:: install=spl.install
    zfs:: install=zfs.install"""

build: |
    build() {
        git:: cd "$$srcdir"
        git:: msg "Connecting to GIT server...."

        git:: if [[ -d "$GITNAME" ]]; then
        git::   cd "$GITNAME" && git pull origin
        git::   msg "The local files are updated."
        git:: else
        git::   git clone "$GITROOT" "$GITNAME"
        git:: fi

        git:: msg "GIT checkout done or server timeout"
        git:: msg "Starting build..."

        git:: rm -rf "$$srcdir/$GITNAME-build"
        git:: git clone "$$srcdir/$GITNAME" "$$srcdir/$GITNAME-build"
        git:: cd "$$srcdir/$GITNAME-build"

        cd $${srcdir}/$SOURCE_NAME
        ./autogen.sh
        spl-all:: ./configure --prefix=/usr --libdir=/usr/lib --sbindir=/usr/sbin \
        zfs-all:: ./configure --prefix=/usr \
        zfs-all::             --sysconfdir=/etc \
        zfs-all::             --sbindir=/usr/sbin \
        zfs-all::             --libdir=/usr/lib \
        zfs-all::             --datadir=/usr/share \
        zfs-all::             --includedir=/usr/include \
        zfs-all::             --with-udevdir=/lib/udev \
        zfs-all::             --libexecdir=/usr/lib/$SOURCE_NAME \
                    --with-config=$BUILD_CONF
        make
    }

spl_utils: |

    package_spl-utils() {
        pkgdesc='Solaris Porting Layer kernel module support files.'

        READD KERNEL DEPENDS

        cd $${srcdir}/$SOURCE_NAME
        make DESTDIR=$${pkgdir} install

        split:: # Remove uneeded files
        split:: rm -r $${pkgdir}/{lib,usr/src}

        install -D -m644 $${srcdir}/spl-utils.hostid $${pkgdir}/etc/hostid
    }

spl: |

    package_spl() {
        pkgdesc='Solaris Porting Layer kernel modules.'
        depends=('spl-utils=$PACKAGE_VER' $SPL_DEPENDS)
        makedepends=($SPL_MAKEDEPENDS)

        cd $${srcdir}/$SOURCE_NAME
        make DESTDIR=$${pkgdir} install

        # move module tree /lib -> /usr/lib
        cp -r $${pkgdir}/{lib,usr}
        rm -r $${pkgdir}/lib

        split:: # Remove uneeded files
        split:: rm -r $${pkgdir}/usr/sbin
    }

zfs_utils: |
    package_zfs-utils() {
        pkgdesc="Kernel module support files for the Zettabyte File System."
        depends=('spl=$PACKAGE_VER' $ZFS_DEPENDS)
        makedepends=($ZFS_MAKEDEPENDS)

        cd $${srcdir}/$SOURCE_NAME
        make DESTDIR=$${pkgdir} install

        # move module tree /lib -> /usr/lib
        cp -r $${pkgdir}/{lib,usr}
        rm -r $${pkgdir}/lib

        split:: # Remove the stuff that was included with the zfs package
        split:: rm -r $${pkgdir}/usr/{lib/modules,src}

        install -D -m644 $${srcdir}/zfs-utils.initcpio.hook $${pkgdir}/usr/lib/initcpio/hooks/zfs
        install -D -m644 $${srcdir}/zfs-utils.initcpio.install $${pkgdir}/usr/lib/initcpio/install/zfs
        install -D -m644 $${srcdir}/zfs-utils.service $${pkgdir}/usr/lib/systemd/system/zfs.service
        install -D -m644 $${srcdir}/zfs-utils.bash-completion $${pkgdir}/usr/share/bash-completion/completions/zfs
    }

zfs: |
    package_zfs() {
        pkgdesc="Kernel modules for the Zettabyte File System."
        depends=('spl=$PACKAGE_VER' 'zfs-utils=$PACKAGE_VER' $ZFS_DEPENDS)
        makedepends=($ZFS_MAKEDEPENDS)

        cd $${srcdir}/$SOURCE_NAME
        make DESTDIR=$${pkgdir} install

        split:: # Remove stuff that will be included with zfs-utils
        split:: rm -r $${pkgdir}/{lib/udev,etc,sbin}
        split:: rm -r $${pkgdir}/usr/{bin,include,lib,sbin,share}

        # move module tree /lib -> /usr/lib
        cp -r $${pkgdir}/{lib,usr}
        rm -r $${pkgdir}/lib
    }

md5sums: |

    '97222567144e2987bb18cd1f83fd6173' spl-0.6.0-rc12.tar.gz
    'a54f0041a9e15b050f25c463f1db7449' spl-utils.hostid
    '99697389f4107ec073edfdf0efd14249' spl.install
    '85435c100d9c1dadad7b961c3cb965f6' zfs-0.6.0-rc11.tar.gz
    '6524f2c20fe9ad33a97879981e5c9a45' zfs-0.6.0-rc12.tar.gz
    '3e1c4a29c4f7d590e6a3041f2c61d6ff' zfs-utils.bash-completion
    '105fe46115c6fc6a335399c74bd58289' zfs-utils.initcpio.hook
    'b5c75ddf052d6c167459674013811885' zfs-utils.initcpio.install
    '161e6a5f5f314c9308b4a4565c01fe45' zfs-utils.service
    '7ac100ebe01cc26da63a06effb2c0405' zfs.install
